// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TournamentTracker.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using TournamentTracker.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\_Imports.razor"
using TournamentTracker.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\Pages\TournamentForm.razor"
using TournamentTracker.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\Pages\TournamentForm.razor"
using TournamentTracker.Client.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/TournamentForm")]
    public partial class TournamentForm : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 97 "C:\Users\Полина\source\repos\TournamentTracker\TournamentTracker.Client\Pages\TournamentForm.razor"
       
    private Tournament Tournament = new Tournament();
    private EditContext editContext;
    private List<Team> AllTeams;
    private string SelectedTeamId;
    private bool showTeamForm;
    private bool ShowTeamForm
    {
        get => showTeamForm;
        set
        {
            showTeamForm = value;
            StateHasChanged();
        }
    }
    private bool showPrizeForm;
    private bool ShowPrizeForm
    {
        get => showPrizeForm;
        set
        {
            showPrizeForm = value;
            StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await UpdateAllTeamsList();
        editContext = new EditContext(Tournament);
    }
    private async Task UpdateAllTeamsList(bool shoulUpdate = true)
    {
        AllTeams = await teamService.GetTeams();
        StateHasChanged();
    }

    private async Task HandleSubmit()
    {
        var isValid = editContext.Validate();

        if (isValid)
        {
            Tournament newTournament = new Tournament
            {
                TournamentName = Tournament.TournamentName
            };
            int newTournamentId = (await tournamentService.CreateTournament(newTournament)).Id;
            foreach (var team in Tournament.EnteredTeams)
            {
                team.TournamentId = newTournamentId;
                await teamService.EditTeam(team);
            }

            Tournament = new Tournament();
            SelectedTeamId = null;
            StateHasChanged();

        }
        else
        {

        }
    }
    private void addTeamToTournament()
    {
        Tournament.EnteredTeams.Add(AllTeams.Find(x => x.Id.ToString() == SelectedTeamId.ToString()));
    }
    private async Task AddPrizeToTournament(Prize prize)
    {
        Tournament.Prizes.Add(prize);
    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITournamentService tournamentService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMemberService memberService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITeamService teamService { get; set; }
    }
}
#pragma warning restore 1591
